{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MNIT Classification","provenance":[],"authorship_tag":"ABX9TyNiYo7yapijLIr01kbw8R9g"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Ti4rVYZJVnDD"},"source":["**1.Getting the Dataset**"]},{"cell_type":"code","metadata":{"id":"NrJK3gHaMyiF","executionInfo":{"status":"ok","timestamp":1604956543752,"user_tz":300,"elapsed":21646,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"80c58ccf-28eb-493d-c2ad-b3c33f7e9d69","colab":{"base_uri":"https://localhost:8080/"}},"source":["from sklearn.datasets import fetch_openml\n","\n","mnist=fetch_openml('mnist_784',version=1)\n","mnist.keys()\n"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['data', 'target', 'frame', 'feature_names', 'target_names', 'DESCR', 'details', 'categories', 'url'])"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"xN9bYi2AVpta"},"source":["**2.Quick Look at Data Structure**"]},{"cell_type":"code","metadata":{"id":"vb37m9xlVTBK","executionInfo":{"status":"ok","timestamp":1604956543753,"user_tz":300,"elapsed":21626,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"d742d7db-fdfa-4772-f56a-8fb9a0ce22dd","colab":{"base_uri":"https://localhost:8080/"}},"source":["X,y = mnist['data'],mnist['target']\n","print(X.shape)\n","print(y.shape)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["(70000, 784)\n","(70000,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"iXkmACzYVk6_","executionInfo":{"status":"ok","timestamp":1604956543755,"user_tz":300,"elapsed":21620,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"6d6533e7-960f-4175-a869-bdcd7ee818cc","colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","\n","some_digit=X[0]\n","some_digit_image=some_digit.reshape(28,28)\n","\n","plt.imshow(some_digit_image,cmap='binary')\n","plt.axis('off')\n","plt.show"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show>"]},"metadata":{"tags":[]},"execution_count":13},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAOcAAADnCAYAAADl9EEgAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAGaElEQVR4nO3dPUiWfR/G8dveSyprs2gOXHqhcAh6hZqsNRqiJoPKRYnAoTGorWyLpqhFcmgpEmqIIByKXiAHIaKhFrGghiJ81ucBr991Z/Z4XPr5jB6cXSfVtxP6c2rb9PT0P0CeJfN9A8DMxAmhxAmhxAmhxAmhljXZ/Vcu/H1tM33RkxNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCiRNCLZvvG+B//fr1q9y/fPnyVz9/aGio4fb9+/fy2vHx8XK/ceNGuQ8MDDTc7t69W167atWqcr948WK5X7p0qdzngycnhBInhBInhBInhBInhBInhBInhHLOOYMPHz6U+48fP8r92bNn5f706dOG29TUVHnt8PBwuc+nLVu2lPv58+fLfWRkpOG2du3a8tpt27aV+759+8o9kScnhBInhBInhBInhBInhBInhGqbnp6u9nJsVS9evCj3gwcPlvvffm0r1dKlS8v91q1b5d7e3j7rz960aVO5b9iwody3bt0668/+P2ib6YuenBBKnBBKnBBKnBBKnBBKnBBKnBBqUZ5zTk5Olnt3d3e5T0xMzOXtzKlm997sPPDx48cNtxUrVpTXLtbz3zngnBNaiTghlDghlDghlDghlDghlDgh1KL81pgbN24s96tXr5b7/fv3y33Hjh3l3tfXV+6V7du3l/vo6Gi5N3un8s2bNw23a9euldcytzw5IZQ4IZQ4IZQ4IZQ4IZQ4IZQ4IdSifJ/zT339+rXcm/24ut7e3obbzZs3y2tv375d7idOnCh3InmfE1qJOCGUOCGUOCGUOCGUOCGUOCHUonyf80+tW7fuj65fv379rK9tdg56/Pjxcl+yxL/HrcKfFIQSJ4QSJ4QSJ4QSJ4QSJ4Tyytg8+PbtW8Otp6envPbJkyfl/uDBg3I/fPhwuTMvvDIGrUScEEqcEEqcEEqcEEqcEEqcEMo5Z5iJiYly37lzZ7l3dHSU+4EDB8p9165dDbezZ8+W17a1zXhcR3POOaGViBNCiRNCiRNCiRNCiRNCiRNCOedsMSMjI+V++vTpcm/24wsrly9fLveTJ0+We2dn56w/e4FzzgmtRJwQSpwQSpwQSpwQSpwQSpwQyjnnAvP69ety7+/vL/fR0dFZf/aZM2fKfXBwsNw3b948689ucc45oZWIE0KJE0KJE0KJE0KJE0KJE0I551xkpqamyv3+/fsNt1OnTpXXNvm79M+hQ4fK/dGjR+W+gDnnhFYiTgglTgglTgglTgglTgjlKIV/beXKleX+8+fPcl++fHm5P3z4sOG2f//+8toW5ygFWok4IZQ4IZQ4IZQ4IZQ4IZQ4IdSy+b4B5tarV6/KfXh4uNzHxsYabs3OMZvp6uoq97179/7Rr7/QeHJCKHFCKHFCKHFCKHFCKHFCKHFCKOecYcbHx8v9+vXr5X7v3r1y//Tp02/f07+1bFn916mzs7PclyzxrPhvfjcglDghlDghlDghlDghlDghlDghlHPOv6DZWeKdO3cabkNDQ+W179+/n80tzYndu3eX++DgYLkfPXp0Lm9nwfPkhFDihFDihFDihFDihFDihFCOUmbw+fPncn/79m25nzt3rtzfvXv32/c0V7q7u8v9woULDbdjx46V13rla2753YRQ4oRQ4oRQ4oRQ4oRQ4oRQ4oRQC/acc3JysuHW29tbXvvy5ctyn5iYmNU9zYU9e/aUe39/f7kfOXKk3FevXv3b98Tf4ckJocQJocQJocQJocQJocQJocQJoWLPOZ8/f17uV65cKfexsbGG28ePH2d1T3NlzZo1Dbe+vr7y2mbffrK9vX1W90QeT04IJU4IJU4IJU4IJU4IJU4IJU4IFXvOOTIy8kf7n+jq6ir3np6ecl+6dGm5DwwMNNw6OjrKa1k8PDkhlDghlDghlDghlDghlDghlDghVNv09HS1lyMwJ9pm+qInJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4QSJ4Rq9iMAZ/yWfcDf58kJocQJocQJocQJocQJocQJof4DO14Dhyk10VwAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"5GykMLW3YW7R","executionInfo":{"status":"ok","timestamp":1604956543756,"user_tz":300,"elapsed":21611,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"43eaf207-7ba8-4825-8934-6bd032c4da4b","colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["y[0]"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'5'"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"i4ZKahucYaTO","executionInfo":{"status":"ok","timestamp":1604956543877,"user_tz":300,"elapsed":21723,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}}},"source":["#convert y to numbers - currently strings\n","import numpy as np\n","\n","y=y.astype(np.uint8)"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XCvc0f129phM"},"source":["**Create Test Set**"]},{"cell_type":"code","metadata":{"id":"qzNJKvs19sQt","executionInfo":{"status":"ok","timestamp":1604956543879,"user_tz":300,"elapsed":21716,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}}},"source":["X_train, X_test,y_train,y_test = X[:60000],X[60000:],y[:60000],y[60000:]"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IKO3O1Z6Aa55"},"source":["**5. Select and Train Models**"]},{"cell_type":"code","metadata":{"id":"UsBMfh5B-Cxw","executionInfo":{"status":"ok","timestamp":1604956543880,"user_tz":300,"elapsed":21712,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}}},"source":["y_train_5 = (y_train == 5)\n","y_test_5 = (y_test ==5)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"UpkIq1MJ_YhU","executionInfo":{"status":"ok","timestamp":1604956567742,"user_tz":300,"elapsed":45569,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"f021868c-e1b8-4994-bf4d-10111b22664a","colab":{"base_uri":"https://localhost:8080/"}},"source":["from sklearn.linear_model import SGDClassifier\n","sgd_clf = SGDClassifier(random_state=42)\n","sgd_clf.fit(X_train,y_train_5)"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SGDClassifier(alpha=0.0001, average=False, class_weight=None,\n","              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,\n","              l1_ratio=0.15, learning_rate='optimal', loss='hinge',\n","              max_iter=1000, n_iter_no_change=5, n_jobs=None, penalty='l2',\n","              power_t=0.5, random_state=42, shuffle=True, tol=0.001,\n","              validation_fraction=0.1, verbose=0, warm_start=False)"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"QEED85Bg-AJy"},"source":["**Performance Measures**"]},{"cell_type":"code","metadata":{"id":"uNAHv-nJBkX7","executionInfo":{"status":"ok","timestamp":1604956737237,"user_tz":300,"elapsed":166175,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"322ee60c-5e17-4296-c034-147c1f36acf7","colab":{"base_uri":"https://localhost:8080/"}},"source":["#implementing cross validation and measure accuracy\n","\n","from sklearn.model_selection import cross_val_score \n","cross_val_score(sgd_clf,X_train,y_train_5,cv=10,scoring='accuracy')"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.96416667, 0.95866667, 0.96416667, 0.95833333, 0.96733333,\n","       0.96933333, 0.96433333, 0.96583333, 0.9575    , 0.96566667])"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"GnLhuKRoGdPF","executionInfo":{"status":"ok","timestamp":1604956907414,"user_tz":300,"elapsed":333555,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"f3646786-135d-440b-e3f5-d10015404454","colab":{"base_uri":"https://localhost:8080/"}},"source":["#confusion matrix\n","\n","#first get predictions \n","from sklearn.model_selection import cross_val_predict\n","y_train_pred = cross_val_predict(sgd_clf,X_train,y_train_5,cv=10)\n","\n","#alternatively, if x_train_5 is defined (in this case, x_train_5 = (x_train_5 == 5) does not work)\n","#y_train_pred = sgd_clf.predict(x_train_5)\n","\n","from sklearn.metrics import confusion_matrix\n","confusion_matrix(y_train_5,y_train_pred)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[53763,   816],\n","       [ 1372,  4049]])"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"ib-ZkDuxNGfA","executionInfo":{"status":"ok","timestamp":1604956907415,"user_tz":300,"elapsed":332117,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"01cdd803-a609-4574-e20c-8c81743b31c2","colab":{"base_uri":"https://localhost:8080/"}},"source":["#precision and recall \n","\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","\n","print(precision_score(y_train_5,y_train_pred))\n","print(recall_score(y_train_5, y_train_pred))\n","print(f1_score(y_train_5,y_train_pred))"],"execution_count":21,"outputs":[{"output_type":"stream","text":["0.8322713257965056\n","0.7469101641763513\n","0.7872836865642621\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"56Y51AX4Pf0s","executionInfo":{"status":"ok","timestamp":1604957794991,"user_tz":300,"elapsed":132,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}}},"source":["#precision and recall trade off --> picking threshold\n","\n","y_scores = cross_val_predict(sgd_clf, X_train, y_train_5, cv=10, method='decision_function')\n","\n","from sklearn.metrics import precision_recall_curve\n","precisions,recalls,thresholds = precision_recall_curve(y_train_5,y_scores)"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"-MnsC2MrPuwL","executionInfo":{"status":"ok","timestamp":1604957795005,"user_tz":300,"elapsed":131,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"27f36d53-489e-4843-c50b-89ec2f12f5ec","colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["def plot_precision_recall_vs_threshold(precisions,recalls,thresholds):\n","  plt.plot(thresholds,precisions[:-1],'b--',label='Precision')\n","  plt.plot(thresholds,recalls[:-1],'g-',label='Recall')\n","\n","plot_precision_recall_vs_threshold(precisions,recalls,thresholds)\n","plt.show()"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_EHzqNXsRn5L","executionInfo":{"status":"ok","timestamp":1604957795015,"user_tz":300,"elapsed":117,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"b2b86b25-c919-4246-b25f-c67f797fc960","colab":{"base_uri":"https://localhost:8080/"}},"source":["#assume you want 80% precision, find threshold and predict with chosen threshold \n","\n","threshold_80_precision = thresholds[np.argmax(precisions >= 0.80)]\n","y_train_pred_80 = (y_scores >= threshold_80_precision)\n","print(precision_score(y_train_5,y_train_pred_80))\n","print(recall_score(y_train_5,y_train_pred_80))"],"execution_count":24,"outputs":[{"output_type":"stream","text":["0.8000376222723853\n","0.7845415974912378\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uXPHdlEZWflt","executionInfo":{"status":"ok","timestamp":1604957795026,"user_tz":300,"elapsed":109,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"4db273d3-e117-43a7-efba-9e8b72a9dbf9","colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["#ROC Curve\n","from sklearn.metrics import roc_curve\n","\n","fpr,tpr,thresholds = roc_curve(y_train_5,y_scores)\n","\n","def plot_roc_curve(fpr,tpr,label=None):\n","  plt.plot(fpr,tpr,linewidth=2,label=label)\n","  plt.plot([0,1],[0,1],'k--')\n","\n","plot_roc_curve(fpr,tpr)\n","plt.show()"],"execution_count":25,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"b6-8lknpX5n3","executionInfo":{"status":"ok","timestamp":1604957795032,"user_tz":300,"elapsed":102,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"9aaeda3f-00ff-4ec7-8650-a7e279f213c2","colab":{"base_uri":"https://localhost:8080/"}},"source":["from sklearn.metrics import roc_auc_score\n","roc_auc_score(y_train_5,y_scores)"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9663423694913393"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"bKR62fdlYFF-","executionInfo":{"status":"ok","timestamp":1604957795038,"user_tz":300,"elapsed":86,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"9ecf7029-2042-4491-9928-9ef79a741f47","colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["#train a new classifier and compare performances\n","\n","from sklearn.ensemble import RandomForestClassifier\n","forest_clf = RandomForestClassifier(random_state=42)\n","y_probas_forest = cross_val_predict(forest_clf,X_train,y_train_5,cv=10,method='predict_proba') \n","#random forest does not have decision function, predict prob that the given instance belongs to a certain class  \n","\n","y_scores_forest=y_probas_forest[:,1] #score probability of positive class\n","fpr_forest,tpr_forest,thresholds_forest=roc_curve(y_train_5,y_scores_forest)\n","\n","plt.plot(fpr,tpr,'b:',label='SGD')\n","plot_roc_curve(fpr_forest,tpr_forest,'Random Forest')\n","plt.legend(loc='lower right')\n","plt.show()"],"execution_count":27,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"zlXBwZYja3v0","executionInfo":{"status":"ok","timestamp":1604959912616,"user_tz":300,"elapsed":22,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"fd5c35a3-320f-48e1-fb98-739f4cc842b0","colab":{"base_uri":"https://localhost:8080/"}},"source":["y_train_pred_forest = cross_val_predict(forest_clf,X_train,y_train_5,cv=10)\n","\n","print(precision_score(y_train_5,y_train_pred_forest))\n","print(recall_score(y_train_5, y_train_pred_forest))"],"execution_count":28,"outputs":[{"output_type":"stream","text":["0.9904623678208584\n","0.8812027301235934\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qpF8cGoKfm1m"},"source":["**Multiclass Classifier**"]},{"cell_type":"code","metadata":{"id":"3NamA1_1fo-C","executionInfo":{"status":"ok","timestamp":1604961415769,"user_tz":300,"elapsed":1503165,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"93c2ed9c-19e9-4b0d-d296-fff5936dfc69","colab":{"base_uri":"https://localhost:8080/"}},"source":["from sklearn.svm import SVC\n","from sklearn.multiclass import OneVsRestClassifier\n","ovr_clf=OneVsRestClassifier(SVC())\n","ovr_clf.fit(X_train,y_train)\n","ovr_clf.predict([some_digit])"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5], dtype=uint8)"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"n1Nl97aTjIdz","executionInfo":{"status":"ok","timestamp":1604966365891,"user_tz":300,"elapsed":35,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"3708f6ce-6b2d-435e-e7e4-6c368f88fc82","colab":{"base_uri":"https://localhost:8080/"}},"source":["sgd_clf.fit(X_train,y_train)\n","sgd_clf.predict([some_digit])"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3], dtype=uint8)"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"IvEJQlMb0sLa","executionInfo":{"status":"ok","timestamp":1604964589163,"user_tz":300,"elapsed":301,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"27deca91-5192-456a-b5c1-af7ba2275308","colab":{"base_uri":"https://localhost:8080/"}},"source":["sgd_clf.decision_function([some_digit])"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-31893.03095419, -34419.69069632,  -9530.63950739,\n","          1823.73154031, -22320.14822878,  -1385.80478895,\n","        -26188.91070951, -16147.51323997,  -4604.35491274,\n","        -12050.767298  ]])"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"rM-GwN_s0yJX","executionInfo":{"status":"ok","timestamp":1604966365892,"user_tz":300,"elapsed":22,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"6c82ed0f-47b9-4748-a0f5-3f2a33c6859b","colab":{"base_uri":"https://localhost:8080/"}},"source":["cross_val_score(sgd_clf,X_train,y_train,cv=10,scoring='accuracy')"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.89683333, 0.86033333, 0.86233333, 0.888     , 0.867     ,\n","       0.85883333, 0.874     , 0.88216667, 0.857     , 0.87816667])"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"fm-YXHaw09Yc","outputId":"b42dfb2c-7596-4116-ff82-ad6709926557","colab":{"base_uri":"https://localhost:8080/"}},"source":["from sklearn.preprocessing import StandardScaler \n","scaler=StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train.astype(np.float64))\n","cross_val_score(sgd_clf,X_train_scaled,y_train,cv=10,scoring='accuracy')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_stochastic_gradient.py:557: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n","  ConvergenceWarning)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_stochastic_gradient.py:557: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n","  ConvergenceWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"aHik_RBZ9WbI"},"source":["#Error analysis with confusion matrix \n","\n","y_train_pred = cross_val_predict(sgd_clf,X_train_scaled,y_train,cv=3)\n","conf_mx=confusion_matrix(y_train,y_train_pred)\n","print(conf_mx)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_jUt6E7wY7ty"},"source":["#Multilabel Classification \n","\n","from sklearn.neighbors import KNeighborsClassifier\n","y_train_large = (y_train>=7)\n","y_train_odd = (y_train%2==1)\n","y_multilabel = np.c_[y_train_large,y_train_odd]\n","\n","knn_clf = KNeighborsClassifier()\n","knn_clf.fit(X_train,y_multilabel)\n","knn_clf.predict([some_digit])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OOR_Xl88nS4m"},"source":["y_train_knn_pred = cross_val_predict(knn_clf,X_train,y_multilabel, cv=3)\n","f1_score(y_multilable,y_train_knn_pred,average='macro')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hbSpMssknjKh"},"source":["#Multioutput Classification\n","import numpy as np\n","\n","noise = np.random.randint(0,100,(len(X_train),784))\n","X_train_mod = X_train + noise\n","noise = np.random.randint(0,100,(len(X_test),784))\n","X_test_mod = X_test + noise \n","y_train_mod=X_train \n","y_test_mod=X_test \n","\n","knn_clf.fit(X_train_mod,y_train_mod)\n","clean_digit=knn_clf.predict([X_test_mod[some_index]])\n","plot_digit(clean_digit)"],"execution_count":null,"outputs":[]}]}