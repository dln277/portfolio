{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Fashion MNIT Image Classifier MLP","provenance":[],"authorship_tag":"ABX9TyNL9NbB4B+9QVKbKDJpcD4T"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"mmF58RXZ0tb-","executionInfo":{"status":"ok","timestamp":1606096746167,"user_tz":300,"elapsed":1977,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"011f3054-38c5-4a5d-b575-efcdf4f23e6b"},"source":["import tensorflow as tf\n","from tensorflow import keras \n","tf.__version__\n","keras.__version__"],"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'2.4.0'"]},"metadata":{"tags":[]},"execution_count":1}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"thzWRKJV02Ji","executionInfo":{"status":"ok","timestamp":1606097545855,"user_tz":300,"elapsed":1564,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"1c8d7f15-c879-49a2-e0f2-988bc211d891"},"source":["#load dataset \n","fashion_mnist=keras.datasets.fashion_mnist\n","(X_train_full,y_train_full),(X_test,y_test)=fashion_mnist.load_data()"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n","32768/29515 [=================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n","26427392/26421880 [==============================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n","8192/5148 [===============================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n","4423680/4422102 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V-d64ZoB38OJ","executionInfo":{"status":"ok","timestamp":1606097572264,"user_tz":300,"elapsed":314,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"f352bfd8-0c8f-46fe-b8a3-3da0ba01d562"},"source":["print(X_train_full.shape,X_train_full.dtype)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["(60000, 28, 28) uint8\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"zh9m0QHD4Dyc","executionInfo":{"status":"ok","timestamp":1606098508307,"user_tz":300,"elapsed":504,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"aa193a97-10fb-409c-d0c4-e2ace9aedfc9"},"source":["#Create validation set \n","\n","X_valid,X_train=X_train_full[:5000]/255.0,X_train_full[5000:]/250.0\n","y_valid,y_train=y_train_full[:5000],y_train_full[5000:]\n","\n","#Create class names\n","class_names=['T-shirt/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']\n","class_names[y_train[0]]"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Coat'"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"Obd46beo71fR","executionInfo":{"status":"ok","timestamp":1606100323554,"user_tz":300,"elapsed":530,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}}},"source":["#Creating model using Sequential API\n","\n","model=keras.models.Sequential() #create sequential model\n","model.add(keras.layers.Flatten(input_shape=[28,28])) #flatten = convert each input image to 1D array\n","model.add(keras.layers.Dense(300,activation=\"relu\")) #add dense layer with 300 neurons, using relu activation\n","model.add(keras.layers.Dense(100,activation='relu'))\n","model.add(keras.layers.Dense(10,activation='softmax'))"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ioRcer76ChO4","executionInfo":{"status":"ok","timestamp":1606100330960,"user_tz":300,"elapsed":355,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"dcc427d6-6745-4984-a46d-3893dd6eb92d"},"source":["model.summary()"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","flatten (Flatten)            (None, 784)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 300)               235500    \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 100)               30100     \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 10)                1010      \n","=================================================================\n","Total params: 266,610\n","Trainable params: 266,610\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fmzuUIzDDOI5","executionInfo":{"status":"ok","timestamp":1606100524497,"user_tz":300,"elapsed":373,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"732895ac-78fa-4df9-d6e4-7441bb0f2557"},"source":["model.layers"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<tensorflow.python.keras.layers.core.Flatten at 0x7fd1b7cc2320>,\n"," <tensorflow.python.keras.layers.core.Dense at 0x7fd1b7d1ba90>,\n"," <tensorflow.python.keras.layers.core.Dense at 0x7fd1b7c2deb8>,\n"," <tensorflow.python.keras.layers.core.Dense at 0x7fd1b7c3ba58>]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DdqgUiFEDSrp","executionInfo":{"status":"ok","timestamp":1606100554728,"user_tz":300,"elapsed":282,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"663a66e9-6b98-46c6-d277-404329b2b355"},"source":["weights,biases = model.layers[1].get_weights()\n","weights"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.00144762, -0.03831687,  0.00721826, ...,  0.056188  ,\n","        -0.00964895, -0.00457703],\n","       [-0.03880056, -0.02394014, -0.0698531 , ..., -0.025143  ,\n","        -0.01312126, -0.02967873],\n","       [-0.01264264,  0.0195237 , -0.0465332 , ..., -0.0711059 ,\n","         0.0204882 ,  0.05333491],\n","       ...,\n","       [ 0.01018747, -0.0382034 , -0.07209896, ...,  0.02355628,\n","        -0.05999127,  0.03709874],\n","       [-0.00168037, -0.05940705, -0.02169368, ..., -0.00681281,\n","         0.01680046,  0.01276824],\n","       [ 0.01970713,  0.03974214,  0.0667394 , ...,  0.02822129,\n","         0.01416774,  0.05893813]], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T-W5zqiEDZ23","executionInfo":{"status":"ok","timestamp":1606100562189,"user_tz":300,"elapsed":381,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"1692cb3a-3751-4fd6-e887-b2f366cfa216"},"source":["weights.shape"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(784, 300)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UEM1m4c9DbdV","executionInfo":{"status":"ok","timestamp":1606100566959,"user_tz":300,"elapsed":376,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"2e1da824-4712-4c9f-e257-3a3e3482a923"},"source":["biases"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3MOMv8DPDdii","executionInfo":{"status":"ok","timestamp":1606100575419,"user_tz":300,"elapsed":346,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"b1155b85-7355-4492-c01d-4a33e1dbb0d8"},"source":["biases.shape"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(300,)"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"AsCwKhzUErSz","executionInfo":{"status":"ok","timestamp":1606101229985,"user_tz":300,"elapsed":346,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}}},"source":["#Compiling the model\n","\n","model.compile(loss='sparse_categorical_crossentropy', \n","              #use sparse cat crossentropy bc we have sparse label (each instance, there is a target class index from 0 to 9) and classes are exclusive\n","              #in the case of one-hot vectors(ex.0,1,0..), would use categorical_crossentropy\n","              optimizer='sgd',\n","              #allow backpropagation\n","              metrics=['accuracy'])"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K5RqapUrFol-","executionInfo":{"status":"ok","timestamp":1606101378601,"user_tz":300,"elapsed":147705,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"b4f1f78b-eedb-4fc1-ee8a-ee266e6cd7e5"},"source":["#Training and evaluating model \n","\n","history=model.fit(X_train,y_train,epochs=30,\n","                  validation_data=(X_valid,y_valid))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Epoch 1/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.7125 - accuracy: 0.7657 - val_loss: 0.5159 - val_accuracy: 0.8246\n","Epoch 2/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.4853 - accuracy: 0.8304 - val_loss: 0.4563 - val_accuracy: 0.8442\n","Epoch 3/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.4403 - accuracy: 0.8467 - val_loss: 0.4156 - val_accuracy: 0.8612\n","Epoch 4/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.4135 - accuracy: 0.8541 - val_loss: 0.3994 - val_accuracy: 0.8606\n","Epoch 5/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3936 - accuracy: 0.8610 - val_loss: 0.3816 - val_accuracy: 0.8702\n","Epoch 6/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3775 - accuracy: 0.8657 - val_loss: 0.3933 - val_accuracy: 0.8606\n","Epoch 7/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3645 - accuracy: 0.8695 - val_loss: 0.3727 - val_accuracy: 0.8712\n","Epoch 8/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3517 - accuracy: 0.8735 - val_loss: 0.3970 - val_accuracy: 0.8566\n","Epoch 9/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3419 - accuracy: 0.8778 - val_loss: 0.3510 - val_accuracy: 0.8800\n","Epoch 10/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3319 - accuracy: 0.8820 - val_loss: 0.3471 - val_accuracy: 0.8754\n","Epoch 11/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3246 - accuracy: 0.8830 - val_loss: 0.3480 - val_accuracy: 0.8770\n","Epoch 12/30\n","1719/1719 [==============================] - 4s 3ms/step - loss: 0.3150 - accuracy: 0.8865 - val_loss: 0.3382 - val_accuracy: 0.8806\n","Epoch 13/30\n","1719/1719 [==============================] - 4s 3ms/step - loss: 0.3080 - accuracy: 0.8899 - val_loss: 0.3455 - val_accuracy: 0.8772\n","Epoch 14/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.3012 - accuracy: 0.8905 - val_loss: 0.3380 - val_accuracy: 0.8826\n","Epoch 15/30\n","1719/1719 [==============================] - 4s 3ms/step - loss: 0.2947 - accuracy: 0.8943 - val_loss: 0.3312 - val_accuracy: 0.8824\n","Epoch 16/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2886 - accuracy: 0.8969 - val_loss: 0.3201 - val_accuracy: 0.8880\n","Epoch 17/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2822 - accuracy: 0.8985 - val_loss: 0.3111 - val_accuracy: 0.8912\n","Epoch 18/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2776 - accuracy: 0.8992 - val_loss: 0.3305 - val_accuracy: 0.8776\n","Epoch 19/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2719 - accuracy: 0.9019 - val_loss: 0.3189 - val_accuracy: 0.8864\n","Epoch 20/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2668 - accuracy: 0.9040 - val_loss: 0.3169 - val_accuracy: 0.8844\n","Epoch 21/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2621 - accuracy: 0.9065 - val_loss: 0.3193 - val_accuracy: 0.8894\n","Epoch 22/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2572 - accuracy: 0.9076 - val_loss: 0.3014 - val_accuracy: 0.8958\n","Epoch 23/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2521 - accuracy: 0.9084 - val_loss: 0.3162 - val_accuracy: 0.8860\n","Epoch 24/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2484 - accuracy: 0.9113 - val_loss: 0.3097 - val_accuracy: 0.8854\n","Epoch 25/30\n","1719/1719 [==============================] - 6s 3ms/step - loss: 0.2434 - accuracy: 0.9128 - val_loss: 0.3107 - val_accuracy: 0.8896\n","Epoch 26/30\n","1719/1719 [==============================] - 6s 3ms/step - loss: 0.2401 - accuracy: 0.9137 - val_loss: 0.3056 - val_accuracy: 0.8896\n","Epoch 27/30\n","1719/1719 [==============================] - 6s 3ms/step - loss: 0.2356 - accuracy: 0.9159 - val_loss: 0.2970 - val_accuracy: 0.8950\n","Epoch 28/30\n","1719/1719 [==============================] - 6s 3ms/step - loss: 0.2313 - accuracy: 0.9161 - val_loss: 0.3021 - val_accuracy: 0.8908\n","Epoch 29/30\n","1719/1719 [==============================] - 6s 3ms/step - loss: 0.2275 - accuracy: 0.9186 - val_loss: 0.2989 - val_accuracy: 0.8942\n","Epoch 30/30\n","1719/1719 [==============================] - 5s 3ms/step - loss: 0.2239 - accuracy: 0.9209 - val_loss: 0.2946 - val_accuracy: 0.8912\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":324},"id":"8EvZX1AeGDQP","executionInfo":{"status":"ok","timestamp":1606102203458,"user_tz":300,"elapsed":620,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"0683773d-d543-419b-9f04-558bc5ab0d3a"},"source":["#Plot learning curves\n","\n","import pandas as pd \n","import matplotlib.pyplot as plt\n","\n","pd.DataFrame(history.history).plot(figsize=(8,5))\n","plt.grid(True)\n","plt.gca().set_ylim(0,1)\n","plt.show()\n","\n","#each training loss and accuracy measured over each epoch"],"execution_count":18,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QBa3DXwqJ-O8","executionInfo":{"status":"ok","timestamp":1606102288742,"user_tz":300,"elapsed":1175,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"37d60e99-9423-4264-bc68-c76bbd0617b5"},"source":["model.evaluate(X_test,y_test)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["313/313 [==============================] - 1s 2ms/step - loss: 63.8869 - accuracy: 0.8420\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[63.88685607910156, 0.8420000076293945]"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HPDbDjSZKHo4","executionInfo":{"status":"ok","timestamp":1606102352104,"user_tz":300,"elapsed":410,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"df597bf5-d47e-4937-84a3-44e94e060f00"},"source":["#Using model to make predictions\n","X_new = X_test[:3]\n","y_proba = model.predict(X_new)\n","y_proba.round(2)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n","       [0., 0., 1., 0., 0., 0., 0., 0., 0., 0.],\n","       [0., 1., 0., 0., 0., 0., 0., 0., 0., 0.]], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iSH6aU8VKYJS","executionInfo":{"status":"ok","timestamp":1606102403237,"user_tz":300,"elapsed":307,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"ab394683-6622-4fc3-955b-e1fc4539fffa"},"source":["y_pred = model.predict_classes(X_new)\n","y_pred"],"execution_count":21,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From <ipython-input-21-81ace37e545f>:1: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.\n","Instructions for updating:\n","Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([9, 2, 1])"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gQgF0bUxKfMJ","executionInfo":{"status":"ok","timestamp":1606102450109,"user_tz":300,"elapsed":363,"user":{"displayName":"Duong Le Nguyen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_oKikuuULhEMHmMpSdaAniE0IT-MHoLjuERqw=s64","userId":"15331333117223727167"}},"outputId":"01232cb8-52a9-4e08-cd4d-da3edbadd8fc"},"source":["import numpy as np\n","\n","np.array(class_names)[y_pred]"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Ankle boot', 'Pullover', 'Trouser'], dtype='<U11')"]},"metadata":{"tags":[]},"execution_count":23}]}]}